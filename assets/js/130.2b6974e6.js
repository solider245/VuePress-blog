(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{419:function(e,a,v){"use strict";v.r(a);var _=v(25),t=Object(_.a)({},(function(){var e=this,a=e.$createElement,v=e._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#emacs-入门-emacs-入门"}},[e._v("Emacs 入门")]),v("ul",[v("li",[v("a",{attrs:{href:"#vim-还是-emacs-vim-还是-emacs"}},[e._v("Vim 还是 Emacs")])]),v("li",[v("a",{attrs:{href:"#emacs-布道-emacs-布道"}},[e._v("Emacs 布道")])]),v("li",[v("a",{attrs:{href:"#在-emacs-世界中存活下来-在-emacs-世界中存活下来"}},[e._v("在 Emacs 世界中存活下来")]),v("ul",[v("li",[v("a",{attrs:{href:"#基本快捷键-基本快捷键"}},[e._v("基本快捷键")])]),v("li",[v("a",{attrs:{href:"#打开与退出-打开与退出"}},[e._v("打开与退出")])]),v("li",[v("a",{attrs:{href:"#学会使用文档-学会使用文档"}},[e._v("学会使用文档")])]),v("li",[v("a",{attrs:{href:"#shell-相关命令-shell-相关命令"}},[e._v("Shell 相关命令")]),v("ul",[v("li",[v("a",{attrs:{href:"#文本编辑命令-文本编辑命令"}},[e._v("文本编辑命令")])]),v("li",[v("a",{attrs:{href:"#控制命令-控制命令"}},[e._v("控制命令")])])])])])]),v("li",[v("a",{attrs:{href:"#配置脚本-emacs-lisp-配置脚本-emacs-lisp"}},[e._v("配置脚本 Emacs Lisp")])]),v("li",[v("a",{attrs:{href:"#高手配置-高手配置"}},[e._v("高手配置")])]),v("li",[v("a",{attrs:{href:"#结语-结语"}},[e._v("结语")])])])])])]),v("p"),e._v(" "),v("h1",{attrs:{id:"emacs-入门"}},[v("a",{attrs:{href:"#emacs-%E5%85%A5%E9%97%A8"}}),e._v("Emacs 入门")]),e._v(" "),v("p",[e._v("Emacs 是 Unix 世界最流行的编辑器之一，负有“神之编辑器”之盛名，学习它的理由毋须多言。但是对于新手来说，它的学习难度也是相当之大（说不难的都是忽悠，虽然可能是善意的谎言），但是掌握了它对于编程、编辑器甚至操作系统的理解都有帮助，因此我建议任何打算长期以编程为业的程序员都尝试一下。")]),e._v(" "),v("h2",{attrs:{id:"vim-还是-emacs"}},[v("a",{attrs:{href:"#vim-%E8%BF%98%E6%98%AF-emacs"}}),e._v("Vim 还是 Emacs")]),e._v(" "),v("p",[e._v("这是一个长久的话题，也是程序员之间经久不衰的爆点之一（可能仅次于什么是最好的编程语言），对此我的建议是先学 Vim（因为 Vim 的入门相对简单一些，可以不必深入）再学 Emacs 然后再决定长期坚守在哪一阵营。")]),e._v(" "),v("p",[e._v("Vim 和 Emacs 孰优孰劣可能难争高下，但是 Emacs 的配置语言 Emacs Lisp 和 VimLang 之间则几乎没有可比性，Emacs Lisp（简称 Elisp）在完备和强大方面都要远胜后者。Elisp 强大的可编程性使得常常有人开发出强大的 Emacs 插件，也使得 Emacs 被它的拥趸们称为“Emacs OS”。当然 VimL 也可以开发出强大的功能，或者与 Python、Lua 之类的脚本交互，但这会带来一些额外的问题，这里不做多谈。")]),e._v(" "),v("blockquote",[v("p",[e._v("Emacs 作为操作系统来说启动速度还是相当快的！")])]),e._v(" "),v("h2",{attrs:{id:"emacs-布道"}},[v("a",{attrs:{href:"#emacs-%E5%B8%83%E9%81%93"}}),e._v("Emacs 布道")]),e._v(" "),v("p",[e._v("这里主要是一些布道内容，用于展示 Emacs 的强大：")]),e._v(" "),v("ul",[v("li",[e._v("玩游戏\n"),v("ul",[v("li",[v("a",{attrs:{href:"https://github.com/sprang/emacs-2048",target:"_blank",rel:"noopener noreferrer"}},[e._v("2048"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("贪吃蛇："),v("code",[e._v("M-x snake")]),e._v("。（这是 Emacs 内置游戏，按键解释见后面）")]),e._v(" "),v("li",[e._v("俄罗斯方块："),v("code",[e._v("M-x snake")]),e._v("。（这是 Emacs 内置游戏，按键解释见后面）")])])]),e._v(" "),v("li",[e._v("任务管理 "),v("a",{attrs:{href:"http://orgmode.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("org-mode"),v("OutboundLink")],1),e._v("（建议上 YouTube 搜索大师的 org-mode 展示）")]),e._v(" "),v("li",[e._v("浏览网页\n"),v("ul",[v("li",[v("a",{attrs:{href:"https://www.emacswiki.org/emacs/WebKit",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebKit"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("a",{attrs:{href:"https://github.com/hayamiz/twittering-mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("偷偷上 Twitter"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("国内论坛\n"),v("ul",[v("li",[v("a",{attrs:{href:"https://github.com/aborn/v2ex-mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("v2ex-mode"),v("OutboundLink")],1)])])])])]),e._v(" "),v("li",[e._v("在线聊天（妈妈再也不用担心上班聊天被老板发现啦！）\n"),v("ul",[v("li",[e._v("Slack："),v("a",{attrs:{href:"https://github.com/yuya373/emacs-slack",target:"_blank",rel:"noopener noreferrer"}},[e._v("emacs-slack"),v("OutboundLink")],1)])])]),e._v(" "),v("li",[e._v("git 可视化\n"),v("ul",[v("li",[v("a",{attrs:{href:"https://magit.vc/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Magit"),v("OutboundLink")],1),e._v("：GUI 的简单 + CLI 的强大！")])])]),e._v(" "),v("li",[e._v("内置 Terminal")])]),e._v(" "),v("p",[e._v("（看完官网不理解这些插件的强大之处的话，建议上 YouTube 观看大师的使用方式。）")]),e._v(" "),v("p",[e._v("当然，对于作为最基本的编程工具来说，配置得当的 Emacs 也输 IDE 太多。")]),e._v(" "),v("p",[e._v("另外，如果你使用 MacOS 或者 Linux，在日常使用或者使用 Shell（bash/zsh）的过程中可能就已经在不知不觉的使用了 Emacs 的快捷键了，学习 Emacs 也能帮你提升日常工作的效率。")]),e._v(" "),v("h2",{attrs:{id:"在-emacs-世界中存活下来"}},[v("a",{attrs:{href:"#%E5%9C%A8-emacs-%E4%B8%96%E7%95%8C%E4%B8%AD%E5%AD%98%E6%B4%BB%E4%B8%8B%E6%9D%A5"}}),e._v("在 Emacs 世界中存活下来")]),e._v(" "),v("p",[e._v("Emacs 是一个强大的编辑器，并且自带了完善的自文档特性，但是作为新手在不熟悉 Emacs 基本概念的情况下依然容易迷茫在它的文字海洋中。")]),e._v(" "),v("h3",{attrs:{id:"基本快捷键"}},[v("a",{attrs:{href:"#%E5%9F%BA%E6%9C%AC%E5%BF%AB%E6%8D%B7%E9%94%AE"}}),e._v("基本快捷键")]),e._v(" "),v("p",[e._v("Emacs 快捷键基本中的基本是这几个：")]),e._v(" "),v("ul",[v("li",[e._v("C（Ctrl 或者 control 键）")]),e._v(" "),v("li",[e._v("M（Meta，PC 中对应 Alt，Mac 上对应 option），Meta 键来自 Solaris，常见 PC 都不具备该键")]),e._v(" "),v("li",[e._v("S（uper，PC 对应 Win 键，Mac 对应 command）")])]),e._v(" "),v("p",[e._v("下面将介绍中将使用快捷键的国际通用简写，比如 "),v("code",[e._v("C-x")]),e._v(" 指同时按下 Ctrl 键和 x 键，"),v("code",[e._v("M-x")]),e._v(" 指同时按下 Meta 和 x，"),v("code",[e._v("C-G")]),e._v(" 指同时按下 Ctrl Shift 和 g（没有开启 Caps Lock 的情况），"),v("code",[e._v("M-x some-long-command")]),e._v(" 指在按下 "),v("code",[e._v("M-x")]),e._v(" 后出现的输入栏中输入 "),v("code",[e._v("some-long-command")]),e._v(" 并按下回车。这里的 "),v("code",[e._v("some-long-command")]),e._v(" 通常是内置或者自定义的函数，可以在编辑器中直接调用。")]),e._v(" "),v("p",[e._v("在 Emacs 中，快捷键通常都是多个快捷键的组合，在前面的快捷（或组合）通常称为 prefix key，比如最常用的 "),v("code",[e._v("C-x C-c")]),e._v(" 的 prefix key 就是 "),v("code",[e._v("C-x")]),e._v("。相同 prefix key 的快捷键在功能上通常都有相似之处。")]),e._v(" "),v("p",[e._v("由于 Emacs 的快捷键通常都比较长，因此经常会出现前面按键按错了想取消的情况，这时候可以按下 "),v("code",[e._v("C-g")]),e._v("，可以清空快捷键栈。"),v("code",[e._v("C-g")]),e._v(" 快捷键的另一重要用处在于结束当前任务，比如某个后台解析任务。另外，如果你的 Emacs 安装了过多插件而硬件性能不够，或者某个后台任务进程不够 nice 导致 Emacs 假死的时候也可以尝试使用 "),v("code",[e._v("C-g")]),e._v("。"),v("code",[e._v("C-g")]),e._v(" 在 Emacs 快捷键中属于救星一般的存在。")]),e._v(" "),v("p",[e._v("相对于快捷键功能，Emacs 更多的功能并没有绑定快捷键，这些功能都对应了 Elisp 的函数，你可以按下 "),v("code",[e._v("M-x")]),e._v(" 来运行这些函数。")]),e._v(" "),v("p",[e._v("另外，很多 Emacs 用户都建议在 Emacs 中完成所有任务，对于需要在 Shell 中完成的任务，你可以按下 "),v("code",[e._v("M-!")]),e._v(" 通常也就是 "),v("code",[e._v("Meta-Shift-1")]),e._v("，这样就能在 Emacs 中打开一个终端而不用单独开启 Shell 会话。")]),e._v(" "),v("h3",{attrs:{id:"打开与退出"}},[v("a",{attrs:{href:"#%E6%89%93%E5%BC%80%E4%B8%8E%E9%80%80%E5%87%BA"}}),e._v("打开与退出")]),e._v(" "),v("p",[e._v("你可以直接输入 "),v("code",[e._v("emcas somefile")]),e._v(" 直接打开文件，也可以启动 Emacs 后输入 "),v("code",[e._v("C-x C-j")]),e._v(" 输入文件地址来打开指定文件。")]),e._v(" "),v("p",[e._v("保存文件命令通常是 "),v("code",[e._v("S-s")]),e._v("，在 macOS 中就是 "),v("code",[e._v("CMD-s")]),e._v("，和大多数 Mac 程序操作一致。")]),e._v(" "),v("p",[e._v("如果你想保存并退出 Emacs，可以输入 "),v("code",[e._v("C-x C-c")]),e._v("，它会提示保存当前 buffer 并在那之后退出 Emacs。")]),e._v(" "),v("h3",{attrs:{id:"学会使用文档"}},[v("a",{attrs:{href:"#%E5%AD%A6%E4%BC%9A%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3"}}),e._v("学会使用文档")]),e._v(" "),v("p",[e._v("Emacs 强大的自文档也是其优势之一，任何时候你想要查找文档都无需离开 Emacs 自身。查看帮助文档相关命令的快捷键都是以 "),v("code",[e._v("C-h")]),e._v(" 为 prefix 键：")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("C-h k")]),e._v("：查看某个快捷键（组合）的用处或者绑定的函数。")]),e._v(" "),v("li",[v("code",[e._v("C-h f")]),e._v("：查看某个函数的作用，以及它绑定的快捷键。")]),e._v(" "),v("li",[v("code",[e._v("C-h v")]),e._v("：查看某个 Emacs 变量的值。")])]),e._v(" "),v("h3",{attrs:{id:"shell-相关命令"}},[v("a",{attrs:{href:"#shell-%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4"}}),e._v("Shell 相关命令")]),e._v(" "),v("p",[e._v("正如前面提到的，Emacs 的很多操作/控制命令都被 Shell（Bash/Zsh）所借鉴，并命名之“Emacs 模式”，可以看出 Emacs 究竟由多大的影响力！（很多 Shell 也支持 Vim 模式，不过通常默认都是 Emacs 模式。）")]),e._v(" "),v("h4",{attrs:{id:"文本编辑命令"}},[v("a",{attrs:{href:"#%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%91%BD%E4%BB%A4"}}),e._v("文本编辑命令")]),e._v(" "),v("ul",[v("li",[e._v("Ctrl + a：移到命令行首")]),e._v(" "),v("li",[e._v("Ctrl + e：移到命令行尾")]),e._v(" "),v("li",[e._v("Ctrl + f：按字符前移（右向）")]),e._v(" "),v("li",[e._v("Ctrl + b：按字符后移（左向）")]),e._v(" "),v("li",[e._v("Meta + f：按单词前移（右向）")]),e._v(" "),v("li",[e._v("Meta + b：按单词后移（左向）")]),e._v(" "),v("li",[e._v("Ctrl + xx：在命令行首和光标之间移动")]),e._v(" "),v("li",[e._v("Ctrl + u：从光标处删除至命令行首")]),e._v(" "),v("li",[e._v("Ctrl + k：从光标处删除至命令行尾")]),e._v(" "),v("li",[e._v("Ctrl + w：从光标处删除至字首")]),e._v(" "),v("li",[e._v("Meta + d：从光标处删除至字尾")]),e._v(" "),v("li",[e._v("Ctrl + d：删除光标处的字符")]),e._v(" "),v("li",[e._v("Ctrl + h：删除光标前的字符")]),e._v(" "),v("li",[e._v("Ctrl + y：粘贴至光标后")]),e._v(" "),v("li",[e._v("Meta + c：从光标处更改为首字母大写的单词")]),e._v(" "),v("li",[e._v("Meta + u：从光标处更改为全部大写的单词")]),e._v(" "),v("li",[e._v("Meta + l：从光标处更改为全部小写的单词")]),e._v(" "),v("li",[e._v("Ctrl + t：交换光标处和之前的字符")]),e._v(" "),v("li",[e._v("Meta + t：交换光标处和之前的单词")])]),e._v(" "),v("h4",{attrs:{id:"控制命令"}},[v("a",{attrs:{href:"#%E6%8E%A7%E5%88%B6%E5%91%BD%E4%BB%A4"}}),e._v("控制命令")]),e._v(" "),v("ul",[v("li",[e._v("Ctrl + r：向后搜索")]),e._v(" "),v("li",[e._v("Ctrl + g：退出某个模式")]),e._v(" "),v("li",[e._v("Ctrl + p/n：上下选择")])]),e._v(" "),v("h2",{attrs:{id:"配置脚本-emacs-lisp"}},[v("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE%E8%84%9A%E6%9C%AC-emacs-lisp"}}),e._v("配置脚本 Emacs Lisp")]),e._v(" "),v("p",[e._v("Elisp 作为 Lisp 最流行的方言之一，拥有强大的表现能力和灵活性。如果你不曾学习过类似的编程语言也不用担心 Elisp 是一门非常简单、学习曲线非常平坦的编程语言，只需几分钟到几小时（取决与你的编程经验）就可以入门，虽然还不足以读懂高手的配置，但已经足够编写和修改简单的配置脚本了。")]),e._v(" "),v("p",[e._v("另外，Elisp 作为最正统的函数式编程语言之一，对于真正热爱编程的人来说决定是非常值得学习的一门编程语言。")]),e._v(" "),v("p",[e._v("推荐教程："),v("a",{attrs:{href:"https://learnxinyminutes.com/docs/elisp/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Learn X language in Y minute."),v("OutboundLink")],1),e._v("。文档很短，找个在线 Elisp REPL 环境相信很快就能了解它的基本概念。")]),e._v(" "),v("h2",{attrs:{id:"高手配置"}},[v("a",{attrs:{href:"#%E9%AB%98%E6%89%8B%E9%85%8D%E7%BD%AE"}}),e._v("高手配置")]),e._v(" "),v("p",[e._v("和 Vim 一样，GitHub 上早有开源的高手们的配置了，并且支持灵活的扩展。比如：")]),e._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://github.com/purcell/emacs.d",target:"_blank",rel:"noopener noreferrer"}},[e._v("purcell/emacs.d"),v("OutboundLink")],1),e._v(" 对流行编程语言都有基本的支持，更高级的功能需要自己扩展。Purcell 的配置的另一个问题是文档太多稀缺，作为新手实在是有点难以下手。")]),e._v(" "),v("li",[v("a",{attrs:{href:"https://github.com/redguardtoo/emacs.d",target:"_blank",rel:"noopener noreferrer"}},[e._v("redguardtoo/emacs.d"),v("OutboundLink")],1),e._v(" 国人的 Emacs 配置，fork 自上面的库，内置了中文支持等众多自定义设置。")]),e._v(" "),v("li",[v("a",{attrs:{href:"https://github.com/bbatsov/prelude",target:"_blank",rel:"noopener noreferrer"}},[e._v("bbatsov/prelude"),v("OutboundLink")],1),e._v(" 相对全功能，但在试用了一段时间后发现自定义设置和我的个人习惯有较大冲突，遂弃。")]),e._v(" "),v("li",[v("a",{attrs:{href:"http://spacemacs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Spacemacs"),v("OutboundLink")],1),e._v(" 结合了 Emacs 和 Vim 的优点，漂亮的 UI 即使不想要任何 Vim 特性也值得你一试。")])]),e._v(" "),v("h2",{attrs:{id:"结语"}},[v("a",{attrs:{href:"#%E7%BB%93%E8%AF%AD"}}),e._v("结语")]),e._v(" "),v("p",[e._v("Emacs 强大的功能需要足够的时间去熟悉和掌握，初次学习花上一整天的时间并不奇怪，如果仍然感觉难以入门，那可能是你的背景知识仍不足够，不妨 2、3 年后再来重新学习，很多 Emacs 高手都经历过多次放弃和重新学习 Emacs 的经历。")]),e._v(" "),v("p",[e._v("Kane Blueriver all right reserved，powered by Gitbook最近修改时间： 2018-05-21 17:28:09")])])}),[],!1,null,null,null);a.default=t.exports}}]);