(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{536:function(s,e,t){"use strict";t.r(e);var a=t(25),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#各组件作用"}},[s._v("各组件作用")]),t("ul",[t("li",[t("a",{attrs:{href:"#scrapy-engine"}},[s._v("Scrapy Engine")])]),t("li",[t("a",{attrs:{href:"#调度器-scheduler"}},[s._v("调度器(Scheduler)")])]),t("li",[t("a",{attrs:{href:"#下载器-downloader"}},[s._v("下载器(Downloader)")])]),t("li",[t("a",{attrs:{href:"#spiders"}},[s._v("Spiders")])]),t("li",[t("a",{attrs:{href:"#item-pipeline"}},[s._v("Item Pipeline")])]),t("li",[t("a",{attrs:{href:"#下载器中间件-downloader-middlewares"}},[s._v("下载器中间件(Downloader middlewares)")])]),t("li",[t("a",{attrs:{href:"#spider中间件-spider-middlewares"}},[s._v("Spider中间件(Spider middlewares)")])])])]),t("li",[t("a",{attrs:{href:"#数据流-data-flow"}},[s._v("数据流(Data flow)")])]),t("li",[t("a",{attrs:{href:"#创建项目"}},[s._v("创建项目")])]),t("li",[t("a",{attrs:{href:"#编写第一个爬虫-spider"}},[s._v("编写第一个爬虫(Spider)")])]),t("li",[t("a",{attrs:{href:"#启动爬虫"}},[s._v("启动爬虫")])])])]),t("p"),s._v(" "),t("p",[s._v("个人博客地址："),t("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//woodenrobot.me/",target:"_blank",rel:"noopener noreferrer"}},[s._v("woodenrobot.me"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("转行做python程序员已经有三个月了，这三个月用Scrapy爬虫框架写了将近两百个爬虫，不能说精通了Scrapy，但是已经对Scrapy有了一定的熟悉。准备写一个系列的Scrapy爬虫教程，一方面通过输出巩固和梳理自己这段时间学到的知识，另一方面当初受惠于别人的博客教程，我也想通过这个系列教程帮助一些想要学习Scrapy的人。")]),s._v(" "),t("blockquote",[t("p",[s._v("Scrapy是一个为了爬取网站数据，提取结构性数据而编写的应用框架。 可以应用在包括数据挖掘，信息处理或存储历史数据等一系列的程序中。"),t("br"),s._v("\n其最初是为了 页面抓取 (更确切来说, 网络抓取 )所设计的， 也可以应用在获取API所返回的数据(例如 Amazon Associates Web Services ) 或者通用的网络爬虫。")])]),s._v(" "),t("h2",{attrs:{id:"各组件作用"}},[s._v("各组件作用")]),s._v(" "),t("h3",{attrs:{id:"scrapy-engine"}},[s._v("Scrapy Engine")]),s._v(" "),t("blockquote",[t("p",[s._v("引擎负责控制数据流在系统中所有组件中流动，并在相应动作发生时触发事件。 详细内容查看下面的数据流(Data Flow)部分。")])]),s._v(" "),t("p",[s._v("此组件相当于爬虫的“大脑”，是整个爬虫的调度中心。")]),s._v(" "),t("h3",{attrs:{id:"调度器-scheduler"}},[s._v("调度器(Scheduler)")]),s._v(" "),t("blockquote",[t("p",[s._v("调度器从引擎接受request并将他们入队，以便之后引擎请求他们时提供给引擎。")])]),s._v(" "),t("p",[s._v("初始的爬取URL和后续在页面中获取的待爬取的URL将放入调度器中，等待爬取。同时调度器会自动去除重复的URL（如果特定的URL不需要去重也可以通过设置实现，如post请求的URL）")]),s._v(" "),t("h3",{attrs:{id:"下载器-downloader"}},[s._v("下载器(Downloader)")]),s._v(" "),t("blockquote",[t("p",[s._v("下载器负责获取页面数据并提供给引擎，而后提供给spider。")])]),s._v(" "),t("h3",{attrs:{id:"spiders"}},[s._v("Spiders")]),s._v(" "),t("blockquote",[t("p",[s._v("Spider是Scrapy用户编写用于分析response并提取item(即获取到的item)或额外跟进的URL的类。 每个spider负责处理一个特定(或一些)网站。")])]),s._v(" "),t("h3",{attrs:{id:"item-pipeline"}},[s._v("Item Pipeline")]),s._v(" "),t("blockquote",[t("p",[s._v("Item Pipeline负责处理被spider提取出来的item。典型的处理有清理、 验证及持久化(例如存取到数据库中)。")])]),s._v(" "),t("p",[s._v("当页面被爬虫解析所需的数据存入Item后，将被发送到项目管道(Pipeline)，并经过几个特定的次序处理数据，最后存入本地文件或存入数据库。")]),s._v(" "),t("h3",{attrs:{id:"下载器中间件-downloader-middlewares"}},[s._v("下载器中间件(Downloader middlewares)")]),s._v(" "),t("blockquote",[t("p",[s._v("下载器中间件是在引擎及下载器之间的特定钩子(specific hook)，处理Downloader传递给引擎的response。 其提供了一个简便的机制，通过插入自定义代码来扩展Scrapy功能。")])]),s._v(" "),t("p",[s._v("通过设置下载器中间件可以实现爬虫自动更换user-agent、IP等功能。")]),s._v(" "),t("h3",{attrs:{id:"spider中间件-spider-middlewares"}},[s._v("Spider中间件(Spider middlewares)")]),s._v(" "),t("blockquote",[t("p",[s._v("Spider中间件是在引擎及Spider之间的特定钩子(specific hook)，处理spider的输入(response)和输出(items及requests)。 其提供了一个简便的机制，通过插入自定义代码来扩展Scrapy功能。")])]),s._v(" "),t("h2",{attrs:{id:"数据流-data-flow"}},[s._v("数据流(Data flow)")]),s._v(" "),t("blockquote",[t("ol",[t("li",[t("p",[s._v("引擎打开一个网站(open a domain)，找到处理该网站的Spider并向该spider请求第一个要爬取的URL(s)。")])]),s._v(" "),t("li",[t("p",[s._v("引擎从Spider中获取到第一个要爬取的URL并在调度器(Scheduler)以Request调度。")])]),s._v(" "),t("li",[t("p",[s._v("引擎向调度器请求下一个要爬取的URL。")])]),s._v(" "),t("li",[t("p",[s._v("调度器返回下一个要爬取的URL给引擎，引擎将URL通过下载中间件(请求(request)方向)转发给下载器(Downloader)。")])]),s._v(" "),t("li",[t("p",[s._v("一旦页面下载完毕，下载器生成一个该页面的Response，并将其通过下载中间件(返回(response)方向)发送给引擎。")])]),s._v(" "),t("li",[t("p",[s._v("引擎从下载器中接收到Response并通过Spider中间件(输入方向)发送给Spider处理。")])]),s._v(" "),t("li",[t("p",[s._v("Spider处理Response并返回爬取到的Item及(跟进的)新的Request给引擎。")])]),s._v(" "),t("li",[t("p",[s._v("引擎将(Spider返回的)爬取到的Item给Item Pipeline，将(Spider返回的)Request给调度器。")])]),s._v(" "),t("li",[t("p",[s._v("(从第二步)重复直到调度器中没有更多地request，引擎关闭该网站。")])])])]),s._v(" "),t("h2",{attrs:{id:"创建项目"}},[s._v("创建项目")]),s._v(" "),t("p",[s._v("在开始爬取之前，首先要创建一个新的Scrapy项目。这里以爬取我的博客为例，进入你打算存储代码的目录中，运行下列命令:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("scrapy startproject scrapyspider\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("该命令将会创建包含下列内容的scrapyspider目录:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("scrapyspider/\n    scrapy.cfg\n    scrapyspider/\n        __init__.py\n        items.py\n        pipelines.py\n        settings.py\n        spiders/\n            __init__.py\n            ...\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("这些文件分别是:")]),s._v(" "),t("ul",[t("li",[s._v("scrapy.cfg: 项目的配置文件。")]),s._v(" "),t("li",[s._v("scrapyspider/: 该项目的python模块。之后您将在此加入代码。")]),s._v(" "),t("li",[s._v("scrapyspider/items.py: 项目中的item文件。")]),s._v(" "),t("li",[s._v("scrapyspider/pipelines.py: 项目中的pipelines文件。")]),s._v(" "),t("li",[s._v("scrapyspider/settings.py: 项目的设置文件。")]),s._v(" "),t("li",[s._v("scrapyspider/spiders/: 放置spider代码的目录。")])]),s._v(" "),t("h2",{attrs:{id:"编写第一个爬虫-spider"}},[s._v("编写第一个爬虫(Spider)")]),s._v(" "),t("blockquote",[t("p",[s._v("Spider是用户编写用于从单个网站(或者一些网站)爬取数据的类。")]),s._v(" "),t("p",[s._v("其包含了一个用于下载的初始URL，如何跟进网页中的链接以及如何分析页面中的内容， 提取生成 item 的方法。")]),s._v(" "),t("p",[s._v("为了创建一个Spider，您必须继承 scrapy.Spider 类， 且定义以下三个属性:")]),s._v(" "),t("ul",[t("li",[s._v("name: 用于区别Spider。 该名字必须是唯一的，您不可以为不同的Spider设定相同的名字。")]),s._v(" "),t("li",[s._v("start_urls: 包含了Spider在启动时进行爬取的url列表。 因此，第一个被获取到的页面将是其中之一。 后续的URL则从初始的URL获取到的数据中提取。")]),s._v(" "),t("li",[s._v("parse() 是spider的一个方法。 被调用时，每个初始URL完成下载后生成的 Response 对象将会作为唯一的参数传递给该函数。 该方法负责解析返回的数据(response data)，提取数据(生成item)以及生成需要进一步处理的URL的 Request 对象。")])])]),s._v(" "),t("p",[s._v("以下为我们的第一个Spider代码，保存在scrapyspider/spiders目录下的blog_spider.py文件中:")]),s._v(" "),t("div",{staticClass:"language-py line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-py"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" scrapy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("spiders "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Spider\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlogSpider")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Spider"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'woodenrobot'")]),s._v("\n    start_urls "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://woodenrobot.me'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" response"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        titles "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" response"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xpath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'//a[@class=\"post-title-link\"]/text()'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("extract"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" title "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" titles"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),s._v(" title"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("strip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"启动爬虫"}},[s._v("启动爬虫")]),s._v(" "),t("p",[s._v("打开终端进入项目所在路径(即:scrapyspider路径下)运行下列命令：")]),s._v(" "),t("p",[s._v("启动爬虫后就可以看到打印出来当前页所有文章标题了。")]),s._v(" "),t("p",[s._v("Ps:这一篇教程里就先简单介绍这么多，有好多东西我还没想好这么讲。期待后面的干货吧！")])])}),[],!1,null,null,null);e.default=r.exports}}]);